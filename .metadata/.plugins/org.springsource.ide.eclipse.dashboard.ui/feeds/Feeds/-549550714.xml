<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2014-10-02T22:49:48Z</updated>
  <entry>
    <title>Spring XD 1.0.1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2014/10/02/spring-xd-1-0-1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Mark Pollack</name>
    </author>
    <id>tag:spring.io,2014-10-02:1780</id>
    <updated>2014-10-02T22:49:48Z</updated>
    <content type="html">&lt;p&gt;On behalf of the Spring XD team, I am very pleased to announce the general availability of Spring XD 1.0.1!  &lt;/p&gt;

&lt;p&gt;This release includes &lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=11401&amp;amp;version=14685"&gt;bug fixes and enhancements&lt;/a&gt; as well as some new features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/spring-projects/spring-xd/wiki/Application-Configuration#enabling-https"&gt;HTTPS access&lt;/a&gt; and &lt;a href="https://github.com/spring-projects/spring-xd/wiki/Application-Configuration#enabling-authentication"&gt;Authentication&lt;/a&gt; to Admin Server&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/spring-projects/spring-xd/wiki/AdminUI#containers"&gt;Cluster&lt;/a&gt; and &lt;a href="https://github.com/spring-projects/spring-xd/wiki/AdminUI#streams"&gt;Stream&lt;/a&gt; views in UI&lt;/li&gt;
&lt;li&gt;Configure a &lt;a href="https://github.com/spring-projects/spring-xd/wiki/Modules#custom-module-registry"&gt;location for custom modules&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-xd/wiki/Sinks#null-sink"&gt;Null sink&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You can &lt;a href="http://repo.spring.io/release/org/springframework/xd/spring-xd/1.0.1.RELEASE/spring-xd-1.0.1.RELEASE-dist.zip"&gt;download the zip distribution&lt;/a&gt; or install on OSX &lt;a href="https://github.com/spring-projects/spring-xd/wiki/Getting-Started#osx-homebrew-installation"&gt;using homebrew&lt;/a&gt;.  On RHEL/CentOs you can &lt;a href="https://github.com/spring-projects/spring-xd/wiki/Getting-Started#redhatcentos-installation"&gt;install using yum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feedback is very important, so please get in touch with questions and comments via&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://stackoverflow.com/questions/tagged/spring-xd"&gt;StackOverflow&lt;/a&gt; &lt;code&gt;spring-xd&lt;/code&gt; tag&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jira.spring.io/browse/XD/?selectedTab=com.atlassian.jira.jira-projects-plugin:summary-panel"&gt;Spring JIRA&lt;/a&gt; or &lt;a href="https://github.com/spring-projects/spring-xd/issues"&gt;GitHub Issues&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring Framework 4.1.1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2014/10/01/spring-framework-4-1-1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Juergen Hoeller</name>
    </author>
    <id>tag:spring.io,2014-10-01:1779</id>
    <updated>2014-10-01T13:15:00Z</updated>
    <content type="html">&lt;p&gt;Dear Spring community,&lt;/p&gt;

&lt;p&gt;I'm pleased to announce that Spring Framework 4.1.1 is available now. As the &lt;b&gt;first maintenance release in the 4.1 line&lt;/b&gt;, this release contains a wide range of fixes for regressions and other issues reported against 4.1 GA. A big thank you to all the issue reporters out there!&lt;/p&gt;

&lt;p&gt;4.1.1 also comes with a &lt;b&gt;selection of minor enhancements&lt;/b&gt;, for example: consistent handling of Java 8's Optional type, a Jackson ObjectMapper builder class with refined defaults, some requested JDBC refinements, as well as &lt;b&gt;specific performance improvements&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://jira.spring.io/issues/?jql=project%20%3D%20SPR%20AND%20fixVersion%20%3D%204.1.1%20ORDER%20BY%20issuetype%20ASC"&gt;-&amp;gt; List of resolved JIRA issues for Spring Framework 4.1.1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We strongly recommend an immediate upgrade to 4.1.1 for all 4.1 GA users. The Spring Framework team is now working towards &lt;b&gt;Spring Framework 4.1.2 at the end of October&lt;/b&gt;, which will be the foundation for the upcoming Spring Boot 1.2 GA release.&lt;/p&gt;

&lt;p&gt;On a related note, along with 4.1.2, we are preparing &lt;b&gt;Spring Framework 4.0.8 as the last 4.0.x maintenance release&lt;/b&gt;. If there is anything you'd like to get fixed in the 4.0.x branch still, now is the time to raise it! Otherwise, please upgrade to 4.1.x for ongoing active maintenance.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - September 30, 2014</title>
    <link rel="alternate" href="https://spring.io/blog/2014/10/01/this-week-in-spring-september-30-2014" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2014-10-01:1774</id>
    <updated>2014-10-01T03:20:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring!&lt;/em&gt; This week &lt;a href="http://spring.io/blog/2014/09/26/pivotal-at-javaone-2014"&gt;the Spring team is at JavaOne&lt;/a&gt;!   There's been, and will be, &lt;em&gt;lots&lt;/em&gt; to see! We're also hanging out at the booth, talking to as many users as possible. Check out the link I just give listing all the cool Pivotal (and non-Pivotal) talks at JavaOne. (Ahem. Naturally, I personally would &lt;em&gt;love&lt;/em&gt; it if you made  &lt;a href="http://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=3693&amp;amp;tclass=popup"&gt;my talk - &lt;em&gt;Spring4TW!&lt;/em&gt; - tomorrow morning at 8:30am at Parc 55, Cyril Magnin II/III&lt;/a&gt;!).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/javaone2014-boot-twis.jpg" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/javaone2014-boot-twis.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;In addition to IoT, Big Data, and Microservice demos using &lt;a href="http://projects.spring.io/spring-cloud/"&gt;NetFlixOSS on Spring&lt;/a&gt;, students were doing the coding challenge to build a &lt;a href="https://spring.io/guides/gs/rest-service/"&gt;REST service with Spring Boot&lt;/a&gt; and pushed to &lt;a href="http://run.pivotal.io"&gt;Pivotal Web Services&lt;/a&gt; in &amp;lt; 15 minutes to get the &lt;a href="http://preshavedyak.com/"&gt;preshavedyak hoodie&lt;/a&gt; from American Apparel, and learning about the best  PaaS for Java available on the market today;  Java 8 / Tomcat 8 support was released just days ago, and there is strong support for Spring, Groovy and Grails.&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;I really liked Michael Plod's &lt;a href="http://spring.io/blog/2014/09/26/webinar-replay-why-i-recommend-spring"&gt;&lt;em&gt;Why I Recommend Spring&lt;/em&gt; webinar&lt;/a&gt;, now available online as a replay&lt;/li&gt;
&lt;li&gt;Last week, Activiti BPMN2 engine co-founder Joram Barrez and I gave a talk on &lt;a href="http://spring.io/blog/2014/09/26/webinar-replay-process-driven-spring-applications-with-activiti"&gt;how to build process (read: workflow) centric Spring applications&lt;/a&gt;, also now available online. &lt;/li&gt;
&lt;li&gt;Tuesday, Oct 21st, 2014 join &lt;a href="https://twitter.com/mstine"&gt;Matt Stine&lt;/a&gt; for microservice architecture series #2:  &lt;a href="http://spring.io/blog/2014/10/01/webinar-architecting-for-continuous-delivery-microservices-with-pivotal-cf-and-spring-cloud"&gt;Architecting for Continuous Delivery: Microservices with Pivotal CF and Spring Cloud&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Thursday, October 23, 2014, 2014 &lt;a href="http://spring.io/blog/2014/10/01/webinar-building-bootful-uis-with-spring-boot-and-vaadin"&gt;Building ?Bootful? UIs with Spring Boot and Vaadin&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Tuesday, November 4, 2014 - microservice architecture series #3 - Join &lt;a href="https://twitter.com/david_syer"&gt;Dr. Dave Syer&lt;/a&gt; on &lt;a href="http://spring.io/blog/2014/10/01/webinar-security-for-microservices-with-spring-and-oauth2"&gt;Security for Microservices with Spring and OAuth2&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Missed microservice architecture #1? Catch the replay of &lt;a href="http://spring.io/blog/2014/09/17/webinar-replay-building-bootiful-microservices-with-spring-boot"&gt;Building "Bootiful" Microservices with Spring Boot&lt;/a&gt; on the Spring Developer Channel&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://spring.io/blog/2014/09/26/spring-boot-1-1-7-released"&gt;Spring Boot 1.1.7 is now available&lt;/a&gt;! &lt;/li&gt;
&lt;li&gt;
&lt;a href="http://raymondhlee.wordpress.com/2014/09/20/setup-spring-security-with-active-directory-ldap-in-spring-boot-web-application/"&gt;Setup Spring Security with Active Directory LDAP in Spring Boot Web Application&lt;/a&gt;  (I &lt;em&gt;just&lt;/em&gt; got asked about this at the Spring BOF yesterday!)&lt;/li&gt;
&lt;li&gt;There's been an interesting debate on microservices recently. &lt;a href="http://blog.cleancoder.com/uncle-bob/2014/09/19/MicroServicesAndJars.html"&gt;"Uncle" Bob Martin has written up a post claiming that &lt;code&gt;.jar&lt;/code&gt;s and Ruby &lt;code&gt;gem&lt;/code&gt;s give you the same benefit of microservices&lt;/a&gt;. There's a &lt;a href="http://www.giorgiosironi.com/2014/09/microservices-are-not-jars.html"&gt;great rebuttal (which I happen to agree with..) by Giorgio Sironi on his blog&lt;/a&gt;. There's even a nice wrapup of &lt;a href="http://www.infoq.com/news/2014/09/microservices-shared-libraries?utm_source=infoq&amp;amp;utm_medium=popular_links_homepage"&gt;the whole discussion on InfoQ&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I really dig &lt;a href="http://blog.pivotal.io/cloud-foundry-pivotal/case-studies-2/platform-wind-tunnel-part-i-heroku"&gt;Matt Stine's &lt;em&gt;wind tunnel&lt;/em&gt; comparison of PaaSes&lt;/a&gt;. Up first: Heroku. I can't wait to see subsequent posts in the series!&lt;/li&gt;
&lt;li&gt;This post on using Spring Data Redis was published (and included in &lt;em&gt;TWiS&lt;/em&gt;..) last year, &lt;a href="http://www.ibm.com/developerworks/library/os-springredis/index.html"&gt;but it came up again and I still thnk it's a worthy read&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;The eHarmony blog has a nice post on &lt;a href="http://www.eharmony.com/engineering/spring-batch-admin-the-tricky-parts/#.VCtPFildUpg"&gt;how to setup Spring Batch Admin (the tricky parts..)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;In the &lt;em&gt;you have to see it to beleive it&lt;/em&gt; department, did you know there's a &lt;a href="http://bitbucket.org/sglienke/spring4d"&gt;Spring for Delphi (Spring4D) project&lt;/a&gt;? There are Spring-inspired C++, ColdFusion, JavaScript, .NET, Python, and numerous others. Cool to add this to the list.&lt;/li&gt;
&lt;li&gt;The Intertech blog has &lt;a href="http://www.intertech.com/Blog/spring-integration-tutorial-part-7-service-activators/"&gt;another installment on their &lt;em&gt;epic&lt;/em&gt; Spring Integration tutorial&lt;/a&gt;. This one's on &lt;em&gt;service activators&lt;/em&gt; - basically the Spring Integration escape-hatch so you can call regular Java objects.&lt;/li&gt;
&lt;li&gt;Benjamin Ball has a great &lt;a href="http://java.dzone.com/articles/getting-started-rabbitmq-and"&gt;writeup on using RabbitMQ and Spring&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;Yashwant Chavan  has a nice post on building a simple &lt;a href="http://www.technicalkeeda.com/spring/spring-boot-mvc-example"&gt;Spring Boot (with Spring MVC) example and editing it in Eclipse&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;Our pals at Codecentric are at it again! They've just released &lt;a href="http://blog.codecentric.de/en/2014/09/spring-boot-admin-first-official-release/"&gt;their first cut of their &lt;em&gt;Spring Boot Admin&lt;/em&gt;&lt;/a&gt;. This looks like something that would fit nicely in the &lt;a href="http://github.com/spring-cloud/"&gt;Spring Cloud&lt;/a&gt; project... &lt;/li&gt;
&lt;li&gt;
&lt;a href="http://prezi.com/ob4vxjmj_h1f/spring-boot/"&gt;This has to be one of the coolest Spring Boot presentations, ever&lt;/a&gt;!  Careful, I don't recommend watching it full-screen if you get motion sickness! :)&lt;/li&gt;
&lt;li&gt;Are you stuck on Apache CXF but still want first-class security? This post &lt;a href="http://java.dzone.com/articles/embedded-jetty-and-apache-cxf"&gt;looks at how to plugin Spring Security on top of CXF in minutes&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Biju Kunjummen did a nice job &lt;a href="http://java.dzone.com/articles/spring-1"&gt;clarifying the differences between Spring's   &lt;code&gt;WebApplicationInitializer&lt;/code&gt; and &lt;code&gt;ApplicationContextInitializer&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Webinar: Architecting for Continuous Delivery:  Microservices with Pivotal CF and Spring Cloud</title>
    <link rel="alternate" href="https://spring.io/blog/2014/10/01/webinar-architecting-for-continuous-delivery-microservices-with-pivotal-cf-and-spring-cloud" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2014-10-01:1776</id>
    <updated>2014-10-01T02:20:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: Matt Stine, Pivotal &lt;/p&gt;

&lt;p&gt;Join Matt Stine to hear how you can architect systems that are optimized for continuous delivery, allowing you to innovate and deliver value faster and safer. Microservices, Pivotal CF, and Spring Cloud combine to create an operationalized architecture that enables enterprises to continuously deliver value at scale through rapid, iterative development, and to meet the needs of a mobile-first world.&lt;/p&gt;

&lt;p&gt;Tuesday, Oct 21st, 2014 3:00PM BST (London GMT+01:00) &lt;a href="http://connect.pivotal.io/OSS_Webinar_MicroserviceswithPivotalCFandSpringCloud7AM_Register.html"&gt;Register&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tuesday, Oct 21st, 2014 10:00AM PDT (San Francisco GMT-07:00) &lt;a href="http://connect.pivotal.io/OSS_Webinar_MicroserviceswithPivotalCFandSpringCloud10AM_Register.html"&gt;Register&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Webinar: Building ?Bootful? UIs with Spring Boot and Vaadin</title>
    <link rel="alternate" href="https://spring.io/blog/2014/10/01/webinar-building-bootful-uis-with-spring-boot-and-vaadin" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2014-10-01:1777</id>
    <updated>2014-10-01T01:20:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: Josh Long, Pivotal and Vaadin&lt;/p&gt;

&lt;p&gt; It's been a long day, but you've done it: you've got a Spring Boot powered backend and now you need to build the UI that'll power the workforce and deliver next week. Vaadin, a UI framework that marries the ease of use of server-side Java and the rich, dynamic nature of client-side JavaScript, integrates well with Spring Boot and offers UI polish that would be hard to secure any other way. Join Spring developer advocate Josh Long and Vaadin evangelists for a look at how Vaadin and Spring Boot can get you to production quicker, and easier.&lt;/p&gt;

&lt;p&gt;Thursday, October 23, 2014, 2014 3:00PM BST (London GMT+01:00) &lt;a href="http://connect.pivotal.io/OSS_Webinar_BuildingBootfulUIswithSpringBootandVaadin7AM_Register.html"&gt;Register&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thursday, October 23, 2014 10:00AM PDT (San Francisco GMT-07:00) &lt;a href="http://connect.pivotal.io/OSS_Webinar_BuildingBootfulUIswithSpringBootandVaadin10AM_Register.html"&gt;Register&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Webinar: Security for Microservices with Spring and OAuth2</title>
    <link rel="alternate" href="https://spring.io/blog/2014/10/01/webinar-security-for-microservices-with-spring-and-oauth2" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2014-10-01:1778</id>
    <updated>2014-10-01T01:10:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: Dave Syer&lt;/p&gt;

&lt;p&gt;Security for Microservices with Spring and OAuth2 OAuth2 is a lightweight security protocol that is well-suited for use with HTTP, the protocol at the heart of many modern architectures. Spring Security OAuth2 has a load of new features, not the least of which being the `@Configuration` support in version 2.0. Combine these with Spring Boot and you have a platform which can get you a secure HTTP service application in about 20 lines of code. This presentation shows how the combination of rapid development and production-ready features in the modern Spring stack are a perfect mixture for developing secure components in a system composed of microservices. We explore the new features in Spring OAuth2, guide you through the choice of which to use and when, and show how easy they are to enable quickly.&lt;/p&gt;

&lt;p&gt;Tuesday, November 4, 2014 3:00PM GMT (London GMT) &lt;a href="http://connect.pivotal.io/OSS_Webinar_SecurityforMicroserviceswithSpringandOAuth2_7AM_Register.html"&gt;Register&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tuesday, November 4, 2014 10:00AM PST (San Francisco GMT-08:00)  &lt;a href="http://connect.pivotal.io/OSS_Webinar_SecurityforMicroserviceswithSpringandOAuth2_10AM_Register.html"&gt;Register&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Webinar Replay: Why I Recommend Spring</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/26/webinar-replay-why-i-recommend-spring" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2014-09-26:1773</id>
    <updated>2014-09-26T14:03:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: Michael Plod&lt;/p&gt;

&lt;p&gt;Slides: &lt;a href="https://speakerdeck.com/mploed/pivotal-webinar-why-do-i-recommend-spring"&gt;https://speakerdeck.com/mploed/pivotal-webinar-why-do-i-recommend-spring&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Is Spring the new legacy as quite a few people tell you on their blogs? I disagree on many levels. Throughout this session I will holistically detail without any polemics why I do recommend using the Spring Framework and its ecosystem. Aspects that will be covered include: operational impacts, ecosystem, coding and road maps. This presentation is aimed at IT managers, Architects and Developers alike.&lt;/p&gt;

&lt;p&gt;Learn more about Spring IO: &lt;a href="http://spring.io"&gt;http://spring.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn more about Spring IO Platform: &lt;a href="http://spring.io/platform"&gt;http://spring.io/platform&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;iframe width="420" height="315" src="//www.youtube.com/embed/z1rpWpSKtT8" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Webinar Replay: Process Driven Spring Applications with Activiti</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/26/webinar-replay-process-driven-spring-applications-with-activiti" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2014-09-26:1772</id>
    <updated>2014-09-26T13:56:00Z</updated>
    <content type="html">&lt;p&gt;Speakers: Josh Long and Joram Barrez, Activiti &lt;/p&gt;

&lt;p&gt;Slides: &lt;a href="https://speakerdeck.com/joshlong/process-driven-applications-with-spring-boot"&gt;https://speakerdeck.com/joshlong/process-driven-applications-with-spring-boot&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Today's applications are complex, distributed systems that - taken together - produce results. Tracking the flow of work through that system, however, becomes increasingly more painful as automated- and human-driven tasks are integrated into business processes. Business can't react to what it can't see. Business can't measure what it can't see. "Workflow" describes the sequence of processes through which a piece of work passes from initiation to completion. Workflow systems, like Activiti, describe and then execute these processes. Activiti is an open-source, Apache 2-licensed workflow engine that works with Spring and Spring Boot. In this webinar, join Spring Developer Advocate Josh Long and Activiti-ninja Joram Barrez for a look at how to distill, describe and reuse complex business processes using Spring (and Spring Boot) and Activiti. &lt;/p&gt;

&lt;p&gt;Learn more about Spring Boot: &lt;a href="http://projects.spring.io/spring-boot"&gt;http://projects.spring.io/spring-boot&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Learn more about Activiti below! &lt;/p&gt;

&lt;p&gt;Activiti project page: &lt;a href="http://activiti.org/"&gt;http://activiti.org/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Joram's blog: &lt;a href="http://jorambarrez.com/blog"&gt;http://jorambarrez.com/blog&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Activiti documentation: &lt;a href="http://activiti.org/userguide/index.html"&gt;http://activiti.org/userguide/index.html&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Activiti Github: &lt;a href="https://github.com/Activiti/Activiti"&gt;https://github.com/Activiti/Activiti&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;iframe width="420" height="315" src="//www.youtube.com/embed/0PV_8Lew3vg" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Pivotal at JavaOne 2014</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/26/pivotal-at-javaone-2014" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2014-09-25:1770</id>
    <updated>2014-09-26T05:56:00Z</updated>
    <content type="html">&lt;p&gt;Are  you heading to JavaOne 2014??? If you  are, we invite all of the Java community members to stop by the Pivotal Booth  (Booth Number 5201) and talk to Pivotal engineers about the latest innovations  in Java SE, in Spring, Groovy, Grails, Redis, RabbitMQ, Tomcat, Cloud Foundry  and Hadoop. The exhibit space is open Monday, Tuesday from 9:30am ? 5:30pm, and  Wednesday from 9:30am to 4:30pm, so there should be plenty of time to get your  questions answered.? See below for a map  and booth details about our giveaways - come  find us!? Lots of great stuff  at the booth.&lt;/p&gt;

&lt;p&gt;Pivotal technologists  are also presenting a lot of sessions as well so be sure to add the following  talks to your session builder and reserve a seat:&lt;br&gt;
??????????? &lt;br&gt;
Josh Long ? Spring  advocate at Pivotal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=3868&amp;amp;tclass=popup" target="_blank"&gt;The Spring BOF  [BOF3868]&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=3693&amp;amp;tclass=popup" target="_blank"&gt;Spring 4TW! [CON3693]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Cornelia Davis ?  Platform Engineer at Pivotal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=4327&amp;amp;tclass=popup" target="_blank"&gt;Running Your Spring  Apps in the Cloud [CON4327]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;John Field ? Solutions  Architect at Pivotal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=3478&amp;amp;tclass=popup" target="_blank"&gt;Open Source Identity  and Access Management Expert Panel, Part 3 [BOF3478]&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=3479&amp;amp;tclass=popup" target="_blank"&gt;The Anatomy of a  Secure Web Application Using?Java?[CON3479]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Guillaume Laforge ?  Groovy project manager at Pivotal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=2939&amp;amp;tclass=popup" target="_blank"&gt;Script Bowl 2014: The  Battle Rages On [CON2939]&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=5996&amp;amp;tclass=popup" target="_blank"&gt;Groovy in 2014 and  Beyond [CON5996]&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=5839&amp;amp;tclass=popup" target="_blank"&gt;Groovy in the Light  of?Java?8 [CON5839]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Martin Lippert -  Principal Software Engineer at Pivotal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=1739&amp;amp;tclass=popup" target="_blank"&gt;Connecting the Eclipse  IDE to the Cloud-Based Era of Developer Tooling [CON1739]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Oliver Gierke - Spring  Data Project Lead at Pivotal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=6071&amp;amp;tclass=popup" target="_blank"&gt;REST Assured:  Hypermedia APIs with Spring MVC [CON6071]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;C?dric Champeau ?  Senior software engineer in the Groovy team at Pivotal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=2425&amp;amp;tclass=popup" target="_blank"&gt;Rethinking API Design  with Groovy Traits [CON2425]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Interesting  non-Pivotal?Sessions&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=1764" target="_blank"&gt;Groovy  and Grails Puzzlers: As Usual?Traps, Pitfalls, and End Cases[CON1764]&lt;/a&gt; &lt;br&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=4952" target="_blank"&gt;Microservices on the  JVM: A Practical Overview?[CON4952]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=9447" target="_blank"&gt;Use Java, the Spring Framework, and Oracle Tuxedo to Extend Existing C/C++/COBOL Apps[HOL9447]&lt;/a&gt; &lt;br&gt;&lt;/p&gt;&lt;p&gt;Visit us at the booth for technical expert conversations on Cloud Foundry, Spring, Groovy, Grails, Redis, RabbitMQ, Tomcat,   Hadoop and much more. We'll have great demos in the booth about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Java EE and PaaS with &lt;a href="http://www.pivotal.io/platform-as-a-service/pivotal-cf"&gt;Cloud Foundry&lt;/a&gt; via JBoss  and WebLogic Buildpack demos&lt;/li&gt;
  
  &lt;li&gt;Internet of Things, Hadoop with &lt;a href="http://projects.spring.io/spring-xd"&gt;Spring  XD&lt;/a&gt; Demos&lt;/li&gt;
  &lt;li&gt;
&lt;a href="http://microservices.io"&gt;Microservice Architecture&lt;/a&gt; and &lt;a href="http://www.pivotal.io/platform-as-a-service/pivotal-cf"&gt;PaaS&lt;/a&gt; with &lt;a href="http://projects.spring.io/spring-boot"&gt;Spring  Boot&lt;/a&gt;, &lt;a href="http://projects.spring.io/spring-cloud"&gt;Spring Cloud&lt;/a&gt; Demos&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href="http://run.pivotal.io"&gt;Pivotal Web Services&lt;/a&gt; Hoodie Push!? &lt;a href="https://spring.io/guides/gs/rest-service/"&gt;Build a REST service with Spring Boot&lt;/a&gt;, push it live to  run.pivotal.io and get a hoodie!? You can  do it ahead of time, and show it running to us, or use our laptops at the  booth. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/pieterhumphrey/springio_website_images/master/hoodie.PNG" target="_blank"&gt;&lt;img border="0" width="215" height="254" src="https://raw.githubusercontent.com/pieterhumphrey/springio_website_images/master/hoodie.PNG" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;?&lt;/p&gt;
&lt;p&gt;?&lt;/p&gt;
&lt;p&gt;Save the date for SpringOne2GX 2015!? We hope you will mark your calendar and join  us again! SpringOne2GX 2015 will be held September 14 - 17, 2015 at the  Marriott Marquis in Washington DC.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/pieterhumphrey/springio_website_images/master/javaone_booth_pivotal.PNG" target="_blank"&gt;&lt;img border="0" width="624" height="398" src="https://raw.githubusercontent.com/pieterhumphrey/springio_website_images/master/javaone_booth_pivotal.PNG" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pieterhumphrey/springio_website_images/blob/master/javaone_booth_pivotal2.PNG" target="_blank"&gt;&lt;img src="https://github.com/pieterhumphrey/springio_website_images/raw/master/javaone_booth_pivotal2.PNG" width="577" height="441" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 1.1.7 released</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/26/spring-boot-1-1-7-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Phil Webb</name>
    </author>
    <id>tag:spring.io,2014-09-26:1771</id>
    <updated>2014-09-26T04:56:15Z</updated>
    <content type="html">&lt;p&gt;Spring Boot 1.1.7 has been released and is available now from &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.springframework.boot%22"&gt;Maven Central&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;This maintenance release is a recommended upgrade for all Spring Boot users. For a complete list of changes please refer to the &lt;a href="https://github.com/spring-projects/spring-boot/issues?q=milestone%3A1.1.7"&gt;issue tracker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://projects.spring.io/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/1.1.7.RELEASE/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Demo: IoT Realized with Spring XD - The Connected Car</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/24/demo-iot-realized-with-spring-xd-the-connected-car" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2014-09-25:1769</id>
    <updated>2014-09-24T20:59:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: Derek Beauregard
Contributors: Phil Berman, Darrel Sharpe, Michael Minella
In this demo we will explore the power of Spring XD in the context of the Internet of Things (IoT). We will look at a solution developed with Spring XD to stream real time analytics from a moving car using open standards. Ingestion of the real time data (location, speed, engine diagnostics, etc), analyzing it to provide highly accurate MPG and vehicle range prediction, as well as providing real time dashboards will all be covered. Watch this demo to get a sense of how Spring XD can serve as a critical building block for the IoT.&lt;/p&gt;

&lt;iframe width="420" height="315" src="//www.youtube.com/embed/qkm2GV57hzY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - Tuesday September 23rd, 2014</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/23/this-week-in-spring-tuesday-september-23rd-2014" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2014-09-24:1768</id>
    <updated>2014-09-23T21:50:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This morning, I had the joy of presenting with my pal &lt;a href="http://twitter.com/jbarrez"&gt;Joram Barrez&lt;/a&gt; on using the &lt;a href="http://activiti.org"&gt;Activiti BPMN workflow engine&lt;/a&gt; with Spring (and Spring Boot). That talk should be online in the next few weeks or so. I'll also be co-presenting with Joram this week at the &lt;a href="http://summit.alfresco.com/"&gt;Alfresco Summit&lt;/a&gt; (on the very same topic).   If you missed SpringOne2GX 2014, check out the &lt;a href="http://spring.io/blog/2014/09/10/springone2gx-2014-day-1"&gt;Day 1&lt;/a&gt; and &lt;a href="http://spring.io/blog/2014/09/15/springone2gx-2014-day-2"&gt;Day 2&lt;/a&gt; wrap ups where can learn about NetFlix, Spring Boot and microservice architecture, among many other things.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The replay of the webinar talk that I gave last week, &lt;a href="http://www.youtube.com/watch?v=VPtlZLdm7Nc&amp;amp;list=PLgGXSWYM2FpNmY5a1MuomSvvovSWHWoAR"&gt;&lt;em&gt;Bootiful Microservices with Spring Boot (and Spring Cloud)&lt;/em&gt;&lt;/a&gt;, is now available online. This talk - because of Boot and the subject matter - got a &lt;em&gt;lot&lt;/em&gt; of attention and so this was actually available online within a few &lt;em&gt;days&lt;/em&gt; (not the usual week or two) of my having presented it! Enjoy! &lt;/li&gt;
&lt;li&gt;I'm really digging some of the posts that've come out of the Codeleak.pl blog of late! First up, this post on &lt;a href="http://blog.codeleak.pl/2014/09/testing-mail-code-in-spring-boot.html"&gt;unit testing e-mail integration code written atop Spring Boot&lt;/a&gt; - check it out!&lt;/li&gt;
&lt;li&gt;Shortly after the microservice talk, I received a tweet pointing me to a recently &lt;a href="http://www.youtube.com/watch?v=f_fGwa2-rMk&amp;amp;list=UUwAKjrTAPEbBzJ-tSWwGPMQ"&gt;added talk on how a Polish company builds microservices with Spring&lt;/a&gt;. The talk's &lt;em&gt;mostly&lt;/em&gt; high level, with a spattering of Spring here and there. This is a cool talk and, at 30 minutes, easy to consume quickly).&lt;br&gt;
&lt;/li&gt;
&lt;li&gt;Rafa? Borowiec over on the Codeleak.pl site has done a really nice job! &lt;a href="http://blog.codeleak.pl/2014/09/using-configurationproperties-in-spring.html"&gt;He followed up his previous post (on unit testing e-mail) with a look at Spring Boot's &lt;code&gt;@ConfigurationProperties&lt;/code&gt; support&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Rafa? &lt;em&gt;also&lt;/em&gt; put together this nice post &lt;a href="http://blog.codeleak.pl/2014/08/validation-groups-in-spring-mvc.html"&gt;on using &lt;em&gt;validation groups&lt;/em&gt; to validate Spring MVC models&lt;/a&gt; and this other post on testing that &lt;a href="http://blog.codeleak.pl/2014/08/spring-mvc-test-assert-given-model-attribute-global-errors.html"&gt;a given Spring MVC model has registered global errors&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Biju Kunjummen  has put together a nice post &lt;a href="http://www.javacodegeeks.com/2014/09/customizing-httpmessageconverters-with-spring-boot-and-spring-mvc.html"&gt;on customizing &lt;code&gt;HttpMessageConverter&lt;/code&gt;s in a Spring Boot application&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Adrian Matei has put together a &lt;em&gt;very&lt;/em&gt; nice post on &lt;a href="http://www.javacodegeeks.com/2014/09/spring-batch-tutorial-with-spring-boot-and-java-configuration.html"&gt;building Spring Batch applications with Java configuration and Spring Boot&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Netflix's (and our pal) Tomas Lin has just published a nice post on &lt;a href="http://fbflex.wordpress.com/2014/09/22/spring-boot-and-webjars-overwriting-configuration-during-runtime/"&gt;how to expose static resources (like JavaScript assets) from &lt;em&gt;different environments&lt;/em&gt; in a configurable way&lt;/a&gt;&lt;br&gt;
&lt;/li&gt;
&lt;li&gt;My pal and Spring ninja Greg Turnquist has a nice post looking at his &lt;a href="http://blog.greglturnquist.com/category/learning-spring-boot"&gt;very  &lt;em&gt;imminent&lt;/em&gt; book on Spring Boot&lt;/a&gt;. I can't wait! Greg's a smart and passionate guy, and if you ever read his &lt;em&gt;Spring Python&lt;/em&gt; book, you know he's a fun read, too! &lt;/li&gt;
&lt;li&gt;The &lt;em&gt;Develop and Conquer&lt;/em&gt; blog has a great post on consuming &lt;a href="http://raymondhlee.wordpress.com/2014/09/20/setup-spring-security-with-active-directory-ldap-in-spring-boot-web-application/"&gt;Active Directory LDAP from Spring Security in a Spring Boot application&lt;/a&gt; - check it out! He has quite a few nice posts (like using ActiveMQ and STOMP support behind Spring 4's websocket support) on other topics, too, so do check it out! &lt;/li&gt;
&lt;/ol&gt;</content>
  </entry>
  <entry>
    <title>Webinar Replay: Building "Bootiful" Microservices with Spring Boot</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/17/webinar-replay-building-bootiful-microservices-with-spring-boot" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2014-09-18:1765</id>
    <updated>2014-09-17T18:30:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: Josh Long&lt;/p&gt;

&lt;p&gt;Slides: &lt;a href="https://speakerdeck.com/joshlong/building-bootiful-microservices-with-spring-boot"&gt;https://speakerdeck.com/joshlong/building-bootiful-microservices-with-spring-boot&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Microservices? A thing? Or hype? What does it mean in practice? The answer, like so many Facebook statuses, is complicated. In broad strokes, Microservices offer a refreshed approach to application architecture. Microservices are a new way to describe many of the patterns that have fallen out of large-scale applications in practice over the recent years. There is no doubt that the approach works. The question is: how does one build a microservice architecture? Join Josh Long for this webinar introducing Spring's support for building microservice architectures, including both Spring Boot, and the new Spring Cloud project.&lt;/p&gt;

&lt;p&gt; Learn more about Spring Boot at:  &lt;a href="http://projects.spring.io/spring-boot"&gt;http://projects.spring.io/spring-boot&lt;/a&gt; &lt;/p&gt;

&lt;p&gt; Learn more about Spring Cloud at: &lt;a href="http://projects.spring.io/spring-cloud"&gt;http://projects.spring.io/spring-cloud&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; Spring Cloud Sample Code &lt;a href="https://github.com/spring-cloud-samples"&gt;https://github.com/spring-cloud-samples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;iframe width="420" height="315" src="//www.youtube.com/embed/VPtlZLdm7Nc" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring for Android 2.0.0.M1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/16/spring-for-android-2-0-0-m1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Roy Clarkson</name>
    </author>
    <id>tag:spring.io,2014-09-12:1761</id>
    <updated>2014-09-16T19:32:51Z</updated>
    <content type="html">&lt;p&gt;I am pleased to announce that Spring for Android 2.0.0.M1 is now available in the &lt;a href="https://repo.spring.io/milestone"&gt;Spring milestone repository&lt;/a&gt;. Highlights include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Generics support through the use of &lt;code&gt;ParameterizedTypeReference&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Support for OkHttp via &lt;code&gt;OkHttpRequestFactory&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;RestTemplate API parity with Spring Framework&lt;/li&gt;
&lt;li&gt;Bug fixes and improvements&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;
&lt;a name="user-content-minimum-version" class="anchor" href="#minimum-version" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Minimum Version&lt;/h3&gt;

&lt;p&gt;This release raises the minimum version from Android 2.1 (API level 7) to Android 2.2 (API level 8). The Google Play Store app is no longer supported on Android 2.1 and that version is not being tracked on the Android developer &lt;a href="https://developer.android.com/about/dashboards/index.html"&gt;Dashboards&lt;/a&gt;. Additionally, OkHttp is only supported on Android 2.3 and newer.&lt;/p&gt;

&lt;h3&gt;
&lt;a name="user-content-generic-types" class="anchor" href="#generic-types" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Generic Types&lt;/h3&gt;

&lt;p&gt;The following is an example of how to consume generic types with Rest Template:&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="n"&gt;ParameterizedTypeReference&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;typeRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ParameterizedTypeReference&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;()&lt;/span&gt; &lt;span class="o"&gt;{};&lt;/span&gt;

&lt;span class="n"&gt;ResponseEntity&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;responseEntity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
        &lt;span class="n"&gt;restTemplate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exchange&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HttpMethod&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;requestEntity&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;typeRef&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;strings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;responseEntity&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getBody&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;
&lt;a name="user-content-api-parity" class="anchor" href="#api-parity" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;API Parity&lt;/h3&gt;

&lt;p&gt;In order to maintain parity with Spring Framework's Rest Template library, this release introduces a few breaking changes. Specifically, note the &lt;code&gt;RestTemplate&lt;/code&gt; constructors have changed. The default constructor now creates a standard set of &lt;code&gt;HttpMessageConverters&lt;/code&gt;. The recommended way to prevent default message converters from being created is to use the following new constructor:&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;RestTemplate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;HttpMessageConverter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;messageConverters&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;
&lt;a name="user-content-conclusion" class="anchor" href="#conclusion" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;For a complete list of changes, see the &lt;a href="https://jira.spring.io/browse/ANDROID"&gt;Release Notes&lt;/a&gt; in JIRA. The &lt;a href="http://docs.spring.io/spring-android/docs/2.0.0.M1/reference/htmlsingle/"&gt;reference documentation&lt;/a&gt; has also been updated to cover the new features.&lt;/p&gt;

&lt;p&gt;Thanks again to everyone that has contributed to the release! Please try this new milestone and report any problems in &lt;a href="https://jira.spring.io/browse/ANDROID"&gt;JIRA&lt;/a&gt; or on &lt;a href="https://github.com/spring-projects/spring-android/issues"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - September 16th, 2014</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/16/this-week-in-spring-september-16th-2014" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2014-09-17:1763</id>
    <updated>2014-09-16T19:29:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring!&lt;/em&gt; We're all back from last week's &lt;em&gt;epic&lt;/em&gt; &lt;a href="http://springone2gx.com"&gt;SpringOne2GX 2014&lt;/a&gt;, but not resting on our laurels! As soon as I returned from SpringOne2GX, I set about preparing for this morning's webinar, &lt;a href="http://spring.io/blog/2014/07/29/webinar-microservices-with-spring-boot-sept-16th"&gt;&lt;em&gt;Bootiful Microservices with Spring Boot&lt;/em&gt;&lt;/a&gt;. That seems to have really resonated well and this is, principally, because &lt;a href="http://spring.io/projects%10/spring-boot"&gt;Spring Boot&lt;/a&gt; and &lt;a href="http://spring.io/projects/spring-cloud"&gt;Spring Cloud&lt;/a&gt; are &lt;em&gt;awesome&lt;/em&gt;! I can't until all the amazing videos on the topic from SpringOne2GX and this webinar itself are available to share with you. To me it feels like a way for&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Spring for Android lead and mobile ninja Roy Clarkson announced &lt;a href="http://spring.io/blog/2014/09/16/spring-for-android-2-0-0-m1-released"&gt;Spring for Android 2.0.0.M1 has been released&lt;/a&gt;. The new release supports OkHttp (via the &lt;code&gt;OkHttpRequestFactory&lt;/code&gt;), updates the included &lt;code&gt;RestTemplate&lt;/code&gt; implementation to be on parity with the &lt;code&gt;RestTemplate&lt;/code&gt; included with the Spring framework (including support for marshalling responses with a &lt;code&gt;ParameterizedTypeReference&lt;/code&gt;). It raises the baseline to Android 2.2 (effectively), and includes numerous bug fixes and other improvements. This is the first new release in a long time - I'd recommend getting and trying these bits ASAP! &lt;/li&gt;
&lt;li&gt; I don't mean to tease, but you should at least read the good Dr. Syer and Spencer Gibb's slides to their &lt;a href="http://speakerdeck.com/dsyer/spring-cloud-spring-boot-and-netflix-oss"&gt; Spring Cloud talk at SpringOne2GX&lt;/a&gt;. Great stuff.&lt;/li&gt;
&lt;li&gt;Spring Security lead Rob Winch has written up a nice post &lt;a href="http://spring.io/blog/2014/09/16/preview-spring-security-websocket-support-sessions"&gt;on using Spring Security with the Spring Session project and websockets&lt;/a&gt;. Basically, if you're using JSR 356 (the websocket JSR), it's possible to need access to the HTTP session only to have it expire because the web-socket API doesn't keep it alive or make access easy. It's now possible to fix all that! &lt;/li&gt;
&lt;li&gt;Speaking of Rob, a recording of a talk he gave - &lt;a href="http://www.infoq.com/presentations/spring-boot-hello-world"&gt;&lt;em&gt;Spring Boot ... Tweeting Complete Spring Applications Since 2013&lt;/em&gt;&lt;/a&gt; - is now available on InfoQ!  Check it out! &lt;/li&gt;
&lt;li&gt;Did you miss last week's &lt;em&gt;epic&lt;/em&gt; &lt;strong&gt;SpringOne2GX 2014&lt;/strong&gt;? Have no fear! As usual, the videos will be available on &lt;a href="http://spring.io/blog/2014/09/15/springone2gx-2014-day-2"&gt;Spring.io&lt;/a&gt; in a trickle over the next few months, &lt;em&gt;and&lt;/em&gt;, in the meantime, you can read the &lt;a href="http://spring.io/blog/2014/09/10/springone2gx-2014-day-1"&gt;day 1&lt;/a&gt; and &lt;a href="http://spring.io/blog/2014/09/15/springone2gx-2014-day-2"&gt;day 2&lt;/a&gt; recap posts.&lt;/li&gt;
&lt;li&gt; ADTMag has a quick (albeit non-technical) news item &lt;a href="http://adtmag.com/articles/2014/09/09/spring-framework-upgraded.aspx"&gt;on the recently released Spring framework 4.1&lt;/a&gt;&lt;br&gt;
&lt;/li&gt;
&lt;li&gt;I just happened upon this &lt;a href="http://www.infoq.com/interviews/Juergen-Hoeller-QConNY-2014-Interview"&gt;amazing interview of Spring framework lead Juergen Hoeller from QCon 2014 this year&lt;/a&gt; on all manner of topics. Really good interview!&lt;br&gt;
&lt;/li&gt;
&lt;li&gt;Nguyen Anh Tuan has an interesting post on &lt;a href="http://sgdev-blog.blogspot.sg/2014/09/stateless-session-for-multi-tenant.html"&gt;how his group went about building a stateless and session-free, multi-tenant Spring Security implementation&lt;/a&gt;&lt;br&gt;
&lt;/li&gt;
&lt;li&gt;A promisingly named blog, &lt;em&gt;TheSpringWay&lt;/em&gt;, has a nice post on the &lt;a href="http://thespringway.info/spring-web/dynamically-change-response-status-code/"&gt;convenient Spring MVC 4.1 improvements to response-code handling&lt;/a&gt;.  Did you know the historically slightly kludgy &lt;code&gt;ResponseEntity&lt;/code&gt; has a nice builder API now?&lt;/li&gt;
&lt;li&gt;the &lt;em&gt;JavaCodeGeeks&lt;/em&gt; blog has a nice post on using &lt;a href="http://www.javacodegeeks.com/2014/09/spring-batch-tutorial-with-spring-boot-and-java-configuration.html"&gt;Spring Batch with Spring Boot&lt;/a&gt;. It's an interesting post for lots of reasons, not the least of which is that it also captures a user's first steps in Java configuration (which runs rampant in Spring Boot).&lt;/li&gt;
&lt;li&gt;I had a lot of fun giving this morning's webinar. Join me next week for a webinar with my pal  &lt;a href="http://spring.io/blog/2014/07/29/webinar-process-driven-spring-applications-with-activiti-sept-23rd"&gt;Joram Barrez on building process-centric Spring Boot and Activiti BPMN2 workflow engine&lt;/a&gt;!&lt;/li&gt;
&lt;/ol&gt;</content>
  </entry>
  <entry>
    <title>Preview Spring Security WebSocket Support &amp; Sessions</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/16/preview-spring-security-websocket-support-sessions" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2014-08-18:1734</id>
    <updated>2014-09-16T16:46:00Z</updated>
    <content type="html">&lt;h2&gt;
&lt;a name="user-content-introduction" class="anchor" href="#introduction" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Introduction&lt;/h2&gt;

&lt;p&gt;In my previous post, I discussed Spring Security WebSocket integration. One of the problems is that in a servlet container, the WebSocket requests do not keep the &lt;code&gt;HttpSession&lt;/code&gt; alive. &lt;/p&gt;

&lt;p&gt;Consider an email application that does much of its work through HTTP requests. However, there is also a chat application embedded within it that works over WebSocket APIs. If a user is actively chatting with someone, we should not timeout the &lt;code&gt;HttpSession&lt;/code&gt; since this would be pretty poor user experience. However, this is exactly what &lt;a href="https://java.net/jira/browse/WEBSOCKET_SPEC-175"&gt;JSR-356 does&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another issue is that according to JSR-356 if the &lt;code&gt;HttpSession&lt;/code&gt; times out any WebSocket that was created with that &lt;code&gt;HttpSession&lt;/code&gt; and an authenticated user should be forcibly closed. This means that if we are actively chatting in our application and are not using the &lt;code&gt;HttpSession&lt;/code&gt;, then we will also disconnect from our conversation!&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-spring-session" class="anchor" href="#spring-session" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Spring Session&lt;/h2&gt;

&lt;p&gt;The Spring Security team initially set out to solve these problems in Spring Security 4.0.0.M2. However, we realized that this was a much broader problem and so &lt;a href="https://github.com/spring-projects/spring-session"&gt;Spring Session&lt;/a&gt; was born.&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-spring-session-http-integration" class="anchor" href="#spring-session-http-integration" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Spring Session HTTP Integration&lt;/h2&gt;

&lt;p&gt;The first step is to configure Spring Session in our web application. This means that our &lt;code&gt;HttpSession&lt;/code&gt; is now backed by Spring Session and not our container.&lt;/p&gt;

&lt;p&gt;In the example below, we add Spring Session to our Spring Security's &lt;code&gt;HttpSecurity instance&lt;/code&gt;. Alternatively, we could have added the &lt;code&gt;SessionRepositoryFilter&lt;/code&gt; directly to our Servlet Container's filter mappings before &lt;code&gt;springSecurityFilterChain&lt;/code&gt;. You can find much more detailed steps in the &lt;a href="https://github.com/spring-projects/spring-session#quick-start"&gt;Spring Session reference&lt;/a&gt;.&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;configure&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpSecurity&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;http&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addFilterBefore&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;SessionRepositoryFilter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sessionRepository&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;ChannelProcessingFilter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;
&lt;a name="user-content-spring-session-websocket-integration" class="anchor" href="#spring-session-websocket-integration" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Spring Session WebSocket integration&lt;/h2&gt;

&lt;p&gt;Spring Session does not yet have support for WebSocket integration, but it is planned in the &lt;a href="https://github.com/spring-projects/spring-session/issues/35"&gt;next release&lt;/a&gt;. However, we can easily implement it ourselves.&lt;/p&gt;

&lt;p&gt;The first step is to ensure we have access to the session id in our WebSocket Session. We can do this by creating a &lt;code&gt;HandshakeInterceptor&lt;/code&gt;&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HttpSessionIdHandshakeInterceptor&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;HandshakeInterceptor&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;beforeHandshake&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ServerHttpRequest&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
                &lt;span class="n"&gt;ServerHttpResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
                &lt;span class="n"&gt;WebSocketHandler&lt;/span&gt; &lt;span class="n"&gt;wsHandler&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
                &lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
                  &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="n"&gt;ServletServerHttpRequest&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;ServletServerHttpRequest&lt;/span&gt; &lt;span class="n"&gt;servletRequest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ServletServerHttpRequest&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;HttpSession&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;servletRequest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getServletRequest&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getSession&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SESSION_ATTR&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getId&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;afterHandshake&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ServerHttpRequest&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ServerHttpResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                   &lt;span class="n"&gt;WebSocketHandler&lt;/span&gt; &lt;span class="n"&gt;wsHandler&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can then add the &lt;code&gt;HandshakeInterceptor&lt;/code&gt; to our endpoint. For example:&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WebSocketConfig&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; 
          &lt;span class="n"&gt;AbstractWebSocketMessageBrokerConfigurer&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;registerStompEndpoints&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StompEndpointRegistry&lt;/span&gt; &lt;span class="n"&gt;registry&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;registry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addEndpoint&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/portfolio"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withSockJS&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setInterceptors&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;HttpSessionIdHandshakeInterceptor&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;

   &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next we can create a &lt;code&gt;ChannelInterceptorAdapter&lt;/code&gt; that uses the session id to update the last accessed time using Spring Session. For example:&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@Bean&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;ChannelInterceptorAdapter&lt;/span&gt; &lt;span class="nf"&gt;sessionContextChannelInterceptorAdapter&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ChannelInterceptorAdapter&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nd"&gt;@Override&lt;/span&gt;
        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;preSend&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MessageChannel&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sessionHeaders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SimpMessageHeaderAccessor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSessionAttributes&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getHeaders&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;sessionId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;sessionHeaders&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SESSION_ATTR&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sessionId&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Session&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sessionRepository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSession&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sessionId&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

                    &lt;span class="n"&gt;sessionRepository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;preSend&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;};&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Last we need to configure the incoming messages to use the &lt;code&gt;ChannelInterceptorAdapter&lt;/code&gt; so that each time a message is received, we update the last accessed time of the &lt;code&gt;HttpSession&lt;/code&gt;. For example:&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WebSocketConfig&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; 
          &lt;span class="n"&gt;AbstractWebSocketMessageBrokerConfigurer&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;configureClientInboundChannel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ChannelRegistration&lt;/span&gt; &lt;span class="n"&gt;registration&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;registration&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setInterceptors&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sessionContextChannelInterceptorAdapter&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;
&lt;a name="user-content-sample-application" class="anchor" href="#sample-application" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Sample Application&lt;/h2&gt;

&lt;p&gt;You can find a complete example, of authorization and session management in the security branch of &lt;a href="https://github.com/rwinch/spring-websocket-portfolio/tree/security"&gt;rwinch/spring-websocket-portfolio&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>SpringOne2GX 2014 - Day 2</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/15/springone2gx-2014-day-2" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2014-09-14:1762</id>
    <updated>2014-09-15T18:18:00Z</updated>
    <content type="html">&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/day2-collage.jpg" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/day2-collage.jpg" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 2's  kicked off with a bang! My theory is that by that point people had seen a day's worth of sessions, and so the keynote needed to be full of impactful, big-bang announcements and discussions in order to remain memorable.  It needed to raise the   bar and demonstrate leadership.  And it did.&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-spring-framework-41" class="anchor" href="#spring-framework-41" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Spring Framework 4.1&lt;/h2&gt;

&lt;p&gt;Spring framework lead &lt;a href="http://spring.io/team/jhoeller"&gt;&lt;strong&gt;Juergen Hoeller&lt;/strong&gt;&lt;/a&gt;  kicked things off with an introduction to the new featues in the &lt;a href="https://spring.io/blog/2014/09/04/spring-framework-4-1-ga-is-here"&gt;recently-released&lt;/a&gt; &lt;a href="http://spring.io/projects/spring-framework"&gt;Spring 4.1&lt;/a&gt;.   &lt;/p&gt;

&lt;p&gt;Spring Framework 4.1 provides annotated JMS listener methods, comprehensive for the final JSR 107 specification, flexible resolution and transformation of static web resources, additional MVC views (like Groovy Server Pages),  websocket-support improvements, and many more new features. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/jms-listeners.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/jms-listeners.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/declarative-view-resolution.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/declarative-view-resolution.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/tweet-websockets.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/tweet-websockets.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-spring-xd" class="anchor" href="#spring-xd" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Spring XD&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://spring.io/projects/spring-xd"&gt;Spring XD&lt;/a&gt; co-lead  &lt;a href="http://spring.io/team/mark-fisher"&gt;&lt;strong&gt;Mark Fisher&lt;/strong&gt;&lt;/a&gt; took the stage to introduce the project as it stands now, a year after its debut last year at SpringOne2GX 2013. Mark invited us to consider how far things have come since the early days of Spring, and to consider how interesting the opportunity continues to be  today. Then... he told a   &lt;em&gt;joke&lt;/em&gt;: "the past, the present and the future walk into a bar. It was tense." &lt;/p&gt;

&lt;p&gt;It took a moment, but the room recovered. Reluctantly. Mark offered to continue as a full time developer and not switch to comedy.&lt;/p&gt;

&lt;p&gt;Mark showed us how Spring XD a looks at the future. It is built on top of first-class components like &lt;a href="http://spring.io/projects/spring-batch"&gt;Spring Batch&lt;/a&gt;, &lt;a href="http://spring.io/projects/spring-integration"&gt;Spring Integration&lt;/a&gt;, &lt;a href="http://spring.io/projects/spring-data"&gt;Spring Data&lt;/a&gt;, &lt;a href="http://redis.io"&gt;Redis&lt;/a&gt;, &lt;a href="http://rabbitmq.com"&gt;RabbitMQ&lt;/a&gt;, &lt;a href="http://zookeeper.apache.org"&gt;Zookeeper&lt;/a&gt;, and Netflix's Zookeeper-addition &lt;a href="http://curator.apache.org/"&gt;Curator&lt;/a&gt;.   It offers a simple, linux like domain-specific language (DSL) that requires no compliation, making Hadoop more approachable to beginners and experts alike.   Extending Spring XD is done in Spring/Java, often in Spring Integration to adapt to customer's unique systems as Spring XD sources and sinks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/spring-xd-unified-platform.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/spring-xd-unified-platform.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It provides   powerful data-integration and stream processing capabilities in an operator- and developer-familiar package. Mark introduces a demonstration that analyses the resource consumption of a smart power grid and then, using &lt;a href="http://en.wikipedia.org/wiki/Predictive_Model_Markup_Language"&gt;PMML&lt;/a&gt; machine-learning support in Spring XD, predicts future consumption levels.   The example uses numerous nodes deployed across multiple cluster nodes, but the assembly and description of the solution in Spring XD itself is really simple! (The crowd seemed to think so, too!)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/tweet-xd.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/tweet-xd.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-microservices" class="anchor" href="#microservices" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Microservices&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;* Dr. Dave Syer&lt;/em&gt;*  (co-founder of &lt;a href="http://spring.io/projects/spring-batch"&gt;Spring Batch&lt;/a&gt;,  co-lead of &lt;a href="http://spring.io/projects/spring-security-oauth"&gt;Spring Security OAuth&lt;/a&gt; and &lt;a href="https://spring.io/projects/spring-boot"&gt;Spring Boot&lt;/a&gt;) rejoined the stage to follow up on his day 2 update on Spring Boot with some news about, and an introduction to, the new &lt;a href="http://spring.io/projects/spring-cloud"&gt;Spring Cloud&lt;/a&gt; umbrella project. Spring Cloud has historically contained  Platform-as-a-Service connectors that let you consume services - databases, message queues, etc. - from within a PaaS environment. Spring Cloud now has an expanded scope to define and provide software to better enable modern, &lt;em&gt;cloud&lt;/em&gt;-y architectures, like the &lt;a href="http://martinfowler.com/articles/microservices.html"&gt;microservices&lt;/a&gt; that Netflix builds atop Spring Boot and &lt;a href="http://netflix.github.io/"&gt;their own, open-source stack&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Spring Cloud aims to provide solutions for &lt;em&gt;emergent patterns&lt;/em&gt; in large scale, often cloud-based applications: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/dr-syer-microservices-demo-emergent-patterns-of-microservices.png" target="_blank"&gt;&lt;img width="400" src="https://raw.githubusercontent.com/joshlong/meh/master/dr-syer-microservices-demo-emergent-patterns-of-microservices.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The new Spring Cloud project, in fact, integrates popular Netflix OSS components like &lt;a href="https://github.com/Netflix/Hystrix"&gt;Hystrix&lt;/a&gt; (which provides implementations of their famous &lt;a href="http://www.slideshare.net/benjchristensen/june-28th-meetup?qid=28efee4d-1ab0-4ed2-9547-86e20eb2f8ea&amp;amp;v=default&amp;amp;b=&amp;amp;from_search=36"&gt;&lt;em&gt;reliability patterns&lt;/em&gt;&lt;/a&gt;) and  &lt;a href="https://github.com/Netflix/Eureka"&gt;Eureka&lt;/a&gt; (which provides service discovery and location).   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/spring-cloud-components.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/spring-cloud-components.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dr. Syer introduced a simple microservice that demonstrated two services, one that provided a customers repository and another that provided access to merchants (stores). The customer service returned information about the nearby stores. This information came from the stores service. If the stores service were taken offline, the customers service continued to function.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/tweet-spring-cloud-netflix.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/tweet-spring-cloud-netflix.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This effort builds upon   Spring Boot with an eye towards  simplifying the development of microservices. This message seems to have resonated well, and we think that the combination of Spring Boot, Spring Cloud and &lt;a href="http://www.cloudfoundry.com"&gt;CloudFoundry&lt;/a&gt; will make a killer combination for JVM apps that need to start life as a monolith, but  then need to distrubute and decentralize in order to scale. Adrian Cockcroft explains why distribution and decentralization are so important extremely  well in &lt;a href="http://www.infoq.com/interviews/adrian-cockcroft-microservices-devops"&gt;an interview on InfoQ.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/tweet-netflix-spring.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/tweet-netflix-spring.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-reactor" class="anchor" href="#reactor" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Reactor&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/reactor"&gt;Reactor Project&lt;/a&gt; lead &lt;a href="http://spring.io/team/jbrisbin"&gt;&lt;em&gt;*Jon Brisbin *&lt;/em&gt;&lt;/a&gt; took the stage to then update us on the state of the Reactor project. Reactor has made great strides since we saw it debut last year. It's since become part of  a the &lt;a href="http://www.reactive-streams.org"&gt;Reactive Streams&lt;/a&gt; effort jointly led by teams at Netflix, Typesafe, Red Hat, Twitter, Oracle, and Pivotal, among others. &lt;/p&gt;

&lt;p&gt;It provided the definition for the &lt;a href="https://github.com/spring-cloud-samples/processor/blob/master/src/main/java/demo/domain/LocationService.java"&gt;&lt;code&gt;LocationProcessor&lt;/code&gt;&lt;/a&gt; service in the microservices segment. (The &lt;code&gt;LocationProcessor&lt;/code&gt; is a nice example of the easy-to-use Java 8 DSL, too!) Reactor is a natural fit for microservices: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/reactive-architecture.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/reactive-architecture.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a foundational piece or well integrated with  Spring Framework 4.0's websocket support, Spring XD, Spring Integration, the upcoming Grails 3.0's event system, and much more. In fact, we saw Reactor in action earlier in the evening's keynote!  &lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-for-more" class="anchor" href="#for-more" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;For More...&lt;/h2&gt;

&lt;p&gt;...stay tuned to this blog and &lt;a href="http://spring.io/blog/"&gt;&lt;em&gt;This Week in Spring&lt;/em&gt;&lt;/a&gt; every Tuesday! &lt;/p&gt;</content>
  </entry>
  <entry>
    <title>SpringOne2GX 2014 - Day 1</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/10/springone2gx-2014-day-1" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2014-09-10:1760</id>
    <updated>2014-09-10T05:40:00Z</updated>
    <content type="html">&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/day1-collage.jpg" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/day1-collage.jpg" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://springone2gx.com/"&gt;SpringOne2GX&lt;/a&gt; kicked off with a bang on Monday night!&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-the-ebb-and-flow-of-development" class="anchor" href="#the-ebb-and-flow-of-development" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;"The Ebb and Flow" of Development&lt;/h2&gt;

&lt;p&gt;The keynote kicked off with Pivotal's own SVP of R&amp;amp;D, &lt;a href="https://twitter.com/hughewilliams"&gt;Hugh Williams&lt;/a&gt; (formerly of e-Bay and Microsoft research) who  talked about the &lt;em&gt;ebb&lt;/em&gt; (the awkward interruptions in momentum)  and &lt;em&gt;flow&lt;/em&gt; of software development. Hugh touched on his prior lives at Microsoft (where he helped develop the Bing search engine) and at eBay (a huge Spring user, we learned!) and spoke about what Spring brings to the table: the ability to be nimble, agile. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/tweet-1-ebay_used_spring.png" target="_blank"&gt;&lt;img width="400" src="https://raw.githubusercontent.com/joshlong/meh/master/tweet-1-ebay_used_spring.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-spring-io-platform" class="anchor" href="#spring-io-platform" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Spring IO Platform&lt;/h2&gt;

&lt;p&gt;Next up was Spring framework lead &lt;a href="Spring%20Juergen"&gt;Juergen Hoeller&lt;/a&gt; who revisited the Spring IO platform story originally introduced at SpringOne2GX 2013. He introduced the "tree." Third-party dependencies form the roots of the Spring IO platform. Spring Boot, Spring Foundation (the Spring framework and other projects) and the &lt;a href="https://spring.io/blog/2014/06/26/introducing-the-spring-io-platform"&gt;Spring IO Platform distribution&lt;/a&gt; provide the stable trunk to support runtimes  like Spring XD and Grails. Applications (leaves, in the diagram) grow from those branches, resting on the solid trunk that is Spring Boot. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/spring-tree.jpg" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/spring-tree.jpg" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spring IO is moving quickly, too! Spring IO distribution represents an opportunity to aggregate and harmonize projects  with a known release cadence: Spring framework moves conservatively, Spring Boot and Spring Data move agressively. Spring IO represents an alternative release cycle; minor versions will aggregate other minor releases whenever they appear.  &lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-spring-boot" class="anchor" href="#spring-boot" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Spring Boot&lt;/h2&gt;

&lt;p&gt;Next, the good &lt;a href="http://twitter.com/david_syer"&gt;Dr. Dave Syer&lt;/a&gt; took the stage to talk about where Spring Boot  (which also debuted at  SpringOne2GX 2013, incidentally!) is at today. Spring Boot is now pervasive across all the Spring projects, and has almost 100 contributors!  Netflix, he noted, has proven the value of microservices by winning the market with them. But it's not going to be a free lunch: it can be very difficult to get it right, and this is a natural place for Spring Boot to add value and to simplify things. Enter the newly formed &lt;a href="http://spring.io/spring-cloud"&gt;Spring Cloud&lt;/a&gt; umbrella project. Besides hosting the PaaS-specific connectors formerly under the Spring Cloud mantra, the Spring Cloud project aims to simplify  microservice system architectures.  &lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-netflix" class="anchor" href="#netflix" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Netflix&lt;/h2&gt;

&lt;p&gt;Next up was Netflix's &lt;a href="http://twitter.com/aglover"&gt;Andy Glover&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/netflix.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/netflix.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/velocity-jvm.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/velocity-jvm.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Netflix needed velocity. "Speed is a competitive advantage." Andy's teams looked at technologies like Ruby on Rails and Node.js to regain the velocity they thought missing on the JVM. Today, Netflix uses  Spring Boot as the basis of their service architecture because it gives them the  scalability and maturity of the JVM and the velocity to deliver. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/spring-boot-is-the-lighter-faster-java.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/spring-boot-is-the-lighter-faster-java.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Referring to a book heralding a better way forward when Spring was born, Andy said: "'Spring Boot is the better, faster, lighter Java' that we wanted ten years ago." &lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-groovy--grails-updates" class="anchor" href="#groovy--grails-updates" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Groovy &amp;amp; Grails Updates&lt;/h2&gt;

&lt;p&gt;Last, but not least, Grails lead (and former Dallas resident!) &lt;a href="http://twitter.com/graemerocher"&gt;Graeme Rocher&lt;/a&gt;   took the stage to give an update on the Groovy and Grails community. Grails 2.4 was just released and is an ongoing maintenance release; it now supports &lt;strong&gt;1100&lt;/strong&gt; plugins! Looking forward, Grails 3.0 (which will be based on Spring Boot!) wowed the audience with entire, Tweet-sized, &lt;em&gt;microservices&lt;/em&gt;! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/joshlong/meh/master/grails-microservice.png" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/joshlong/meh/master/grails-microservice.png" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-whats-next" class="anchor" href="#whats-next" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What's Next&lt;/h2&gt;

&lt;p&gt;We'll be back with a day 2 wrap-up on everything Spring, Groovy &amp;amp; Grails, Cloud Foundry and Big-data! &lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring (SpringOne2GX 2014 edition!) - September 9, 2014</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/09/this-week-in-spring-springone2gx-2014-edition-september-9-2014" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2014-09-09:1759</id>
    <updated>2014-09-09T22:08:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;, live from &lt;a href="http://springone2gx.com"&gt;SpringOne2GX 2014&lt;/a&gt;! This year's show is something to behold! We kicked off the show yesterday with one amazing keynote here in the "lone-star state" featuring Pivotal SVP of engineering &lt;a href="https://twitter.com/hughewilliams"&gt;Hugh Williams&lt;/a&gt;, the Spring team leads  &lt;a href="http://twitter.com/springjuergen"&gt;Juergen Hoeller&lt;/a&gt;, &lt;a href="http://twitter.com/david_syer"&gt;Dave Syer&lt;/a&gt;, &lt;a href="http://twitter.com/graemerocher"&gt;Graeme Rocher&lt;/a&gt; and and Netflix's &lt;a href="http://twitter.com/aglover"&gt;Andy Glover&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We'll do some recap blogs, of course, so stay tuned. Before we get started with this week's roundup, check out this video of the SpringOne2GX 2014 logo being projected onto the Dallas Omni hotel!&lt;/p&gt;

&lt;iframe width="420" height="315" src="//www.youtube.com/embed/9sQZItUcokA" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
 

&lt;div&gt; 

&lt;p&gt; And, while this is nothing like what the recording (which'll be available soon, anyway..) or even a well-written recap (stay tuned! Also coming..) would be, here are some choice tweets from last night's keynote to whet your appetite:&lt;/p&gt;

  &lt;a href="https://camo.githubusercontent.com/113b62c93978a87fce4b4488a4c5470708a4ef7f/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f4278487645522d435541453461386b2e6a70673a6c61726765" target="_blank"&gt;&lt;img width="200" src="https://camo.githubusercontent.com/113b62c93978a87fce4b4488a4c5470708a4ef7f/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f4278487645522d435541453461386b2e6a70673a6c61726765" data-canonical-src="https://pbs.twimg.com/media/BxHvER-CUAE4a8k.jpg:large" style="max-width:100%;"&gt;&lt;/a&gt;&lt;p&gt;Indeed, even the week leading up to SpringOne2GX has been &lt;em&gt;epic&lt;/em&gt; as the team's busily been releasing new, exciting bits for us to use! This week's roundup is &lt;em&gt;packed&lt;/em&gt; with good stuff.&lt;/p&gt;

 


&lt;ol&gt;
&lt;li&gt;Just in time for SpringOne2GX, &lt;a href="http://twitter.com/springjuergen"&gt;Spring lead Juergen Hoeller&lt;/a&gt; &lt;a href="http://spring.io/blog/2014/09/04/spring-framework-4-1-ga-is-here"&gt;has just announced that Spring 4.1 is now available&lt;/a&gt;! 
The new release is packed with great stuff including JMS annotations,  comprehensive JCache (JSR 107) support, new Spring MVC views, websocket refinements, improved performance, and &lt;em&gt;much&lt;/em&gt; more! 
&lt;/li&gt;
&lt;li&gt;Spring Boot co-lead Phil Webb has just  announced  &lt;a href="http://spring.io/blog/2014/09/08/spring-boot-1-2-0-m1-available-now"&gt;Spring Boot 1.2.0.M1&lt;/a&gt;, hot on the heals of &lt;a href="http://spring.io/blog/2014/09/05/spring-boot-1-1-6-released"&gt;Spring Boot 1.1.6&lt;/a&gt;. 1.1.6 is a bug-fix that's highly recommended.  1.2.0.M1, on the other hand, is the first milestone of the very exciting 1.2 Spring Boot release. It's packed with new features: JTA support, easier consumption of JNDI-bound resources (a nice feature in its own right, but especially convenient in light JTA!),  auto-configuration for the Spring Cloud PaaS connectors, easy SSL termination with Tomcat and Jetty, and improved metrics for &lt;code&gt;DataSource&lt;/code&gt;s and health indicators.&lt;/li&gt;
&lt;li&gt;Spring Data lead Oliver Gierke has just announced that &lt;a href="http://spring.io/blog/2014/09/09/spring-data-release-train-evans-goes-ga"&gt;Spring Data Evans has gone GA&lt;/a&gt;!   The new release is &lt;em&gt;crammed&lt;/em&gt; full of features! Redis Sentinel, ALPS and excerpt projections, multi-store configuration, a baseline of Spring 4.0, support for &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;first&lt;/code&gt; as keywords in derived queries, MongoDB 2.6 full text, and &lt;em&gt;much&lt;/em&gt; more.&lt;/li&gt;
&lt;li&gt;Continuing the data theme, &lt;a href="http://spring.io/blog/2014/09/08/spring-for-apache-hadoop-2-1-0-m1-released"&gt;Spring for Apache Hadoop ninja Thomas Risberg  has just been released&lt;/a&gt;. The new release adds support for append-mode store writers, kerberos configuration for secured clusters, container grouping and clustering in Spring YARN, and it remains compatible with Hadoop 2.0+, Pivotal HD 2.0, Cloudera CDH5, and Hortonworks 2.1.&lt;/li&gt;
&lt;li&gt; 
      I'll be giving &lt;em&gt;two&lt;/em&gt; webinars soon: one on &lt;a href="https://spring.io/blog/2014/07/29/webinar-microservices-with-spring-boot-sept-16th"&gt;building microservices with Spring on September 16th&lt;/a&gt;, and the other &lt;a href="https://spring.io/blog/2014/07/29/webinar-process-driven-spring-applications-with-activiti-sept-23rd"&gt;on using the Activiti workflow engine with Spring on September 23rd&lt;/a&gt;. Register now  and bring your questions, comments and more! We'll have lots to talk about and it should be a lot of fun!
&lt;/li&gt;
&lt;li&gt;One of my heroes, &lt;a href="http://spring.io/blog/2014/09/07/spring-integration-java-dsl-1-0-milestone-3-available"&gt;Spring Integration ninja Artem Bilan has just announced the Spring Integration Java configuration DSL  milestone 3&lt;/a&gt;. The blog has a list of the (many) new features &lt;em&gt;and&lt;/em&gt;   supporting code. I couldn't do it justice here, just check it out.&lt;/li&gt;
&lt;li&gt;Spring ninja and all-around-nice guy &lt;a href="http://twitter.com/ankinson/"&gt;Andy Wilkinson&lt;/a&gt; has just announced &lt;a href="http://spring.io/blog/2014/09/07/spring-io-platform-1-0-2-released"&gt;the release of the Spring IO platform 1.0.2 release&lt;/a&gt;. The new release incorporates many new projects, so be sure to check it out. The Spring IO platform is an attempt at harmonizing dependencies across the many Spring projects so that, from the perspective of the dependency consumer, there's never any conflicts with common libraries.&lt;/li&gt;
&lt;li&gt;Spring Integration lead &lt;a href="http://spring.io/blog/2014/09/05/spring-amqp-for-java-1-4-milestone-1-available"&gt;Gary Russell has just announced Spring AMQP (for Java) 1.4 milestone 1&lt;/a&gt;. The new release includes annotation support (&lt;code&gt;@EnableRabbit&lt;/code&gt;) and annotation-driven message listeners (&lt;code&gt;@RabbitListener&lt;/code&gt;). Huzzah! This mirrors the similar support for JMS in Spring 4.1.&lt;/li&gt;
&lt;li&gt;Artem is not here this week at &lt;a href="http://springone2gx.com/"&gt;SpringOne2GX&lt;/a&gt; for sad, complicated reasons (we miss you Artem!), but that didn't stop him from making quite a splash this last week first with the Spring Integration Java configuration DSL release (see above) and &lt;a href="http://spring.io/blog/2014/09/05/spring-integration-4-1-milestone-1-available"&gt;now the Spring Integration 4.1 Milestone 1 release&lt;/a&gt;. The Spring Integration release includes a &lt;em&gt;lot&lt;/em&gt; of cool features, including the migration of common types to Spring 4 itself, performance improvements, the introduction of the Spring 4.1 SpEL compiler, web socket adapters (yes, web socket adapters!), &lt;a href="Reactor%20project%20support"&gt;http://github.com/projectreactor&lt;/a&gt;, a &lt;a href="http://github.com/RichardHightower/boon/wiki"&gt;Boon&lt;/a&gt;-powered JSON mapper, an implementation of the EIP splitter pattern that can return an &lt;code&gt;Iterator&lt;/code&gt; for results (and, thus, can &lt;em&gt;stream&lt;/em&gt; them).&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://twitter.com/mraible"&gt;Our pal Matt Raible&lt;/a&gt; took a look at using &lt;a href="http://raibledesigns.com/rd/entry/getting_started_with_jhipster_on"&gt;the Spring Boot-powered JHipster project&lt;/a&gt;. He hit some rough patches, but the blog provides all sorts of good information on how he got around it so that you can avoid them and really fly!&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;Blog4Java&lt;/em&gt; blog (run by our pal &lt;a href="http://twitter.com/jbbarquero"&gt;Javier Barquero&lt;/a&gt;)  has a  &lt;a href="http://malsolo.com/blog4java/?p=375"&gt;follow up post to his look at using Spring Batch&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;And, of course, what SpringOne2GX would be complete &lt;a href="http://blog.pivotal.io/pivotal/news-2/springone-2gx-conference-kicks-off-in-dallas-with-focus-on-microservices-and-big-data"&gt;without the annual press-release&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;There's an interesting post on the Chariot Solutions blog &lt;a href="http://chariotsolutions.com/blog/post/converting-java-spring-to-scala/"&gt;on converting a Spring Boot application from Java to Scala&lt;/a&gt; - definitely worth a look. Interestingly, it doesn't seem like you gain all that much over just using Java 8 in this particular example...&lt;/li&gt;
&lt;li&gt;Are you in the &lt;strong&gt;Dallas Fort Worth&lt;/strong&gt; area? Since we're throwing &lt;a href="http://springone2gx.com"&gt;SpringOne2GX 2014&lt;/a&gt; in Dallas, &lt;a href="http://javamug.org/"&gt;we thought we'd take a moment to round up some.. ok a &lt;em&gt;lot&lt;/em&gt;.. of the Spring team and head on over to the local Java user group&lt;/a&gt; (called the "Java Metroplex Users Group,"  or Java MUG for short) and say hi. I hope you'll consider joining us for what promises to be a really fun night!&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Data Release Train Evans Goes GA</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/09/spring-data-release-train-evans-goes-ga" />
    <category term="releases" label="Releases" />
    <author>
      <name>Oliver Gierke</name>
    </author>
    <id>tag:spring.io,2014-09-09:1758</id>
    <updated>2014-09-09T16:10:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the entire Spring Data team, I'd like to announce the general availability of the Spring Data release train iteration called Evans. The release ships 11 modules to help you build sophisticated data access layers on top of relational and non-relational data stores.&lt;/p&gt;

&lt;p&gt;The major themes of this iteration were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Upgrade Spring baseline to 4.0&lt;/li&gt;
&lt;li&gt;Support for &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;first&lt;/code&gt; as keywords in derived queries&lt;/li&gt;
&lt;li&gt;Support for MongoDB 2.6 features like text search&lt;/li&gt;
&lt;li&gt;SpEL support for Spring Data JPA (Spring Security integration)&lt;/li&gt;
&lt;li&gt;Redis Sentinel support&lt;/li&gt;
&lt;li&gt;ALPS and excerpt projections for Spring Data REST&lt;/li&gt;
&lt;li&gt;Support for custom implementations in the CDI extension&lt;/li&gt;
&lt;li&gt;Improved multi-store configuration&lt;/li&gt;
&lt;li&gt;Asciidoctor for reference documentation&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here's the full list of participating modules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spring Data Commons 1.9 GA - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/1.9.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.9.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.9.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.9.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data JPA 1.7 GA - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/1.7.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.7.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.7.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.7.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data MongoDB 1.6 GA - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/1.6.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.6.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.6.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.6.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Neo4j 3.2 GA - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/3.2.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.2.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.2.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.2.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Solr 1.3 GA - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-solr/1.3.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.3.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.3.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.3.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Couchbase 1.2 GA - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/1.2.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.2.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.2.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.2.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Cassandra 1.1 GA - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/1.1.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.1.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.1.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.1.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Elasticsearch 1.1 GA - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/1.1.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.1.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.1.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.1.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Gemfire 1.5 GA - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-gemfire/1.5.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.5.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.5.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.5.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Redis 1.4 GA - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/1.4.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.4.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.4.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.4.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data REST 2.2 GA - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/2.2.0.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.2.0.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.2.0.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.2.0.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The home stretch to GA allowed us to fix &lt;a href="https://jira.spring.io/issues/?filter=14761"&gt;72 tickets&lt;/a&gt; which leaves us with 294 tickets fixed and implemented for Evans overall. Find a curated change log for the release train in &lt;a href="https://github.com/spring-projects/spring-data-commons/wiki/Release-Train-Evans"&gt;our wiki&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The example projects have been updated to the latest version already and are a good starting point to familiarize yourself with the new features. Watch this space for an upcoming blog series which will introduce some of the features introduced in greater detail.&lt;/p&gt;

&lt;p&gt;The next train iteration is going to be named &lt;a href="http://en.wikipedia.org/wiki/Martin_Fowler"&gt;Fowler&lt;/a&gt; with an expected first milestone in approximately 6 weeks. We're going to ship a final service release for Dijkstra in about 3 weeks time. Looking forward to your feedback!&lt;/p&gt;</content>
  </entry>
</feed>

